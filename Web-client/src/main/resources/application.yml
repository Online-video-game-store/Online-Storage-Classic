server:
  port: 9000

spring:
  application:
    name: "WEB-CLIENT"

  output.ansi.enabled: ALWAYS

  # ограничение на размер MultipartFile файлов
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 12MB

  security:
    oauth2:
      client:
        provider:
          spring:
            issuer-uri: http://localhost:8090
            jwk-set-uri: http://localhost:8090/oauth2/jwks
        registration:
          apm-client:
            provider: spring
            client-id: client
            client-secret: "secret"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            redirect-uri: "http://127.0.0.1:8080//login/oauth2/code/apm-client"
            scope:
              - user.read
              - user.write
              - openid

# настройки Эврики
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:7777/eureka}
    register-with-eureka: true                # Регистрация клиента в Eureka Server
    fetch-registry: true                      # Извлечение реестра из Eureka Server
    retry-on-connect-errors: true             # Повторные подключения к Eureka при сбоях
    registry-fetch-interval-seconds: 5        # (30)
  instance:
    prefer-ip-address: false                  # Использовать IP-адрес вместо имени хоста
    lease-renewal-interval-in-seconds: 5      # Интервал отправки heartbeats (30)
    lease-expiration-duration-in-seconds: 10  # Таймаут для истечения lease (сердцебиений) (60)

#logging:
#  level:
#    org.springframework.security.oauth2: DEBUG
#    org.springframework.security: DEBUG
#    org.springframework.web: DEBUG
#    org.springframework.security.jwt: DEBUG
#    org.springframework.security.oauth2.client: DEBUG
#    org.springframework.security.oauth2.core: DEBUG
