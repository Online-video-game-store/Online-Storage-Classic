server:
  port: 9000

spring:
  application:
    name: "WEB-CLIENT"

  output.ansi.enabled: ALWAYS

  # ограничение на размер MultipartFile файлов
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 12MB

  security:
    oauth2:
      client:
        provider:
          spring:
            issuer-uri: ${app.config.auth-server-url}
          apm-client:
            user-name-attribute: sub
        registration:
          apm-client:
            provider: spring
            client-id: client
            client-secret: "secret"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            redirect-uri: ${OAUTH2_REDIRECT_URI:{baseUrl}/login/oauth2/code/{registrationId}}
            scope:
              - openid

      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:http://localhost:8090} # сервер аутентификации


  # Cloud Bus + RabbitMQ
  cloud:
    function:
      definition: channelOrderEvents;channelOrderCancel
    stream:
      default-binder: rabbit
      function:
        bindings:
          channelOrderEvents-in-0: ch-pk8000-order-in
          channelOrderCancel-in-0: ch-pk8000-cancel-in
      bindings:
        # Входные каналы
        ch-pk8000-order-in:
          destination: pk8000.order.exchange
          group: ${spring.application.name}-orders-group
          content-type: application/json
        ch-pk8000-cancel-in:
          destination: pk8000.cancel.exchange
          group: ${spring.application.name}-orders-group
          content-type: application/json
      rabbit:
        bindings:
          # Входные каналы
          ch-pk8000-order-in:
            consumer:
              exchange-type: direct
              declare-exchange: true
              auto-bind-dlq: true
              binding-routing-key: "order.done"
          ch-pk8000-cancel-in:
            consumer:
              exchange-type: direct
              declare-exchange: true
              auto-bind-dlq: true
              binding-routing-key: "order.fail"
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin


# Настройки приложения
app:
  config:
    gateway-url: ${GATEWAY_SERVER_URL:http://localhost:9010}
    auth-server-url: ${OAUTH2_ISSUER_URI:http://localhost:8090}
    cookie-anon-id: ${ANON_ID_CLAIM:ANON_ID}    # в этом поле куки хранят ID не аутентифицированного пользователя
    claim-user-id: ${USER-ID-CLAIM:user_id}     # поле в токене, хранящее ID пользователя


#logging:
#  level:
#    org.springframework.security.oauth2: DEBUG
#    org.springframework.security: DEBUG
#    org.springframework.web: DEBUG
#    org.springframework.security.jwt: DEBUG
#    org.springframework.security.oauth2.client: DEBUG
#    org.springframework.security.oauth2.core: DEBUG
#    org.springframework.security.web.savedrequest: DEBUG
