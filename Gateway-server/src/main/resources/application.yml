server:
  port: 9010

spring:
  application:
    name: "GATEWAY-SERVER"

  output.ansi.enabled: ALWAYS

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:http://localhost:8090}
          jwk-set-uri: ${OAUTH2_JWK_URI:http://localhost:8090/oauth2/jwks}

  cloud:
    loadbalancer:
      retry:
        enabled: true         # Повторные попытки при сбоях балансировщика
    gateway:
      default-filters:
        - TokenRelay=
        - PreserveHostHeader
      discovery:
        locator:
          enabled: true
          lower-case-service-id: false
      routes:
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/pk8000/api/catalog/**
          filters:
            - Retry=3         # Повторить запрос до 3 раз при сбое
        #            - RemoveRequestHeader=Authorization   # удаляем исходный токен
        - id: cart-service
          uri: lb://CART-SERVICE
          predicates:
            - Path=/pk8000/api/public/cart/**
          filters:
            - Retry=3         # Повторить запрос до 3 раз при сбое
#            - RemoveRequestHeader=Authorization   # удаляем исходный токен
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/pk8000/api/order/**
          filters:
            - Retry=3         # Повторить запрос до 3 раз при сбое
        #            - RemoveRequestHeader=Authorization   # удаляем исходный токен
        - id: payment-service
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/pk8000/api/payment/**
          filters:
            - Retry=3         # Повторить запрос до 3 раз при сбое
        #            - RemoveRequestHeader=Authorization   # удаляем исходный токен

        # Мониторинг метрик
        - id: actuator-catalog-route
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/CATALOG-SERVICE/actuator/**
          filters:
            - StripPrefix=1   # убираем /CATALOG-SERVICE
        - id: actuator-order-route
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/ORDER-SERVICE/actuator/**
          filters:
            - StripPrefix=1   # убираем /ORDER-SERVICE
        - id: actuator-payment-route
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/PAYMENT-SERVICE/actuator/**
          filters:
            - StripPrefix=1   # убираем /PAYMENT-SERVICE
        - id: actuator-cart-route
          uri: lb://CART-SERVICE
          predicates:
            - Path=/CART-SERVICE/actuator/**
          filters:
            - StripPrefix=1   # убираем /CART-SERVICE


# настройки Эврики
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:7777/eureka}
    register-with-eureka: true                # Регистрация клиента в Eureka Server
    fetch-registry: true                      # Извлечение реестра из Eureka Server
    retry-on-connect-errors: true             # Повторные подключения к Eureka при сбоях
    registry-fetch-interval-seconds: 5        # (30)
  instance:
    prefer-ip-address: false                  # Использовать IP-адрес вместо имени хоста
    lease-renewal-interval-in-seconds: 5      # Интервал отправки heartbeats (30)
    lease-expiration-duration-in-seconds: 10  # Таймаут для истечения lease (сердцебиений) (60)
