server:
  port: ${ORDER_SERVICE_PORT:0}

spring:
  application:
    name: "ORDER-SERVICE"

  output.ansi.enabled: ALWAYS

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:http://localhost:8090} # сервер аутентификации

  # SQL database
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/orders_db
    username: admin
    password: admin
  # Spring Jpa Hibernate
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          auto: update
        show_sql: false
        format_sql: true
        highlight_sql: true

    generate-ddl: true
    defer-datasource-initialization: true
    open-in-view: false
  # автозапуск скриптов 'schema.sql' и 'data.sql'
  sql:
    init:
      mode: never           # не нужен
  #      mode: always
  #      schema-locations: classpath:schema.sql

# настройки Эврики
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:7777/eureka}
    register-with-eureka: true                # Регистрация клиента в Eureka Server
    fetch-registry: true                      # Извлечение реестра из Eureka Server
    retry-on-connect-errors: true             # Повторные подключения к Eureka при сбоях
    registry-fetch-interval-seconds: 5        # (30)
  instance:
    prefer-ip-address: false                  # Использовать IP-адрес вместо имени хоста
    lease-renewal-interval-in-seconds: 5      # Интервал отправки heartbeats (30)
    lease-expiration-duration-in-seconds: 10  # Таймаут для истечения lease (сердцебиений) (60)


#logging:
#  level:
#    org:
#      springframework: DEBUG
